name: Sync upstream

on:
  schedule:
    - cron: '0 * * * *'  # every hour
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine upstream source
        id: upstream
        run: |
          if [ "${{ github.repository }}" = "Zed-Mod-School/mod-base-test-1" ]; then
            echo "upstream_url=https://github.com/open-goal/jak-project.git" >> $GITHUB_OUTPUT
            echo "upstream_name=jak-project" >> $GITHUB_OUTPUT
          else
            echo "upstream_url=https://github.com/Zed-Mod-School/mod-base-test-1.git" >> $GITHUB_OUTPUT
            echo "upstream_name=mod-base" >> $GITHUB_OUTPUT
          fi

      - name: Add upstream remote and fetch
        run: |
          git remote add upstream ${{ steps.upstream.outputs.upstream_url }}
          git fetch upstream

      - name: Check if we're behind upstream
        id: check_diff
        run: |
          BEHIND=$(git rev-list HEAD..upstream/main --count)
          echo "behind_count=$BEHIND" >> $GITHUB_OUTPUT

      - name: Create update branch and merge upstream
        if: steps.check_diff.outputs.behind_count != '0'
        run: |
          git checkout -b update-from-${{ steps.upstream.outputs.upstream_name }}
          git merge upstream/main --no-edit
          git push origin update-from-${{ steps.upstream.outputs.upstream_name }}

      - name: Create Pull Request
        if: steps.check_diff.outputs.behind_count != '0'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update from ${{ steps.upstream.outputs.upstream_name }}"
          body: "This PR merges the latest changes from `${{ steps.upstream.outputs.upstream_name }}`."
          head: update-from-${{ steps.upstream.outputs.upstream_name }}
          base: main
